name: CI/CD

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
    paths:
      - '**.ts'
      - '**.tsx'
      - '**.js'
      - 'package.json'
      - 'bun.lock'
      - 'Dockerfile'
      - 'chart/**'
  pull_request:
    paths:
      - '**.ts'
      - '**.tsx'
      - '**.js'
      - 'package.json'
      - 'bun.lock'
      - 'Dockerfile'
      - 'chart/**'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: declare-cloud/actions-runner

jobs:
  lint:
    if: |
      !startsWith(github.ref, 'refs/tags/v') &&
      !(
        (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master') &&
        startsWith(github.event.head_commit.message, 'chore(release):')
      )
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      - uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lock') }}
          restore-keys: ${{ runner.os }}-bun-
      - run: bun install
      - run: bun run format:check
      - run: bun run lint:check

  build-and-push:
    if: |
      !failure() &&
      !cancelled() &&
      !(
        (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master') &&
        startsWith(github.event.head_commit.message, 'chore(release):')
      )
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4

      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lock') }}
          restore-keys: ${{ runner.os }}-bun-

      - run: bun install

      - name: Determine Versions
        id: get_version
        run: |
          SHORT_SHA=$(echo "${GITHUB_SHA}" | cut -c1-7)

          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            PR_NUMBER="${{ github.event.pull_request.number }}"
            CONTAINER_TAG="pr-${PR_NUMBER}.${SHORT_SHA}"
            EXTRA_TAG="pr-${PR_NUMBER}"
          elif [[ "${GITHUB_REF}" == refs/tags/v* ]]; then
            TAG_VERSION="${GITHUB_REF#refs/tags/v}"
            CONTAINER_TAG="${TAG_VERSION}"
            EXTRA_TAG="latest"
          else
            CONTAINER_TAG="dev-${SHORT_SHA}"
            EXTRA_TAG="dev"
          fi

          echo "CONTAINER_TAG=${CONTAINER_TAG}" >> $GITHUB_ENV
          echo "EXTRA_TAG=${EXTRA_TAG}" >> $GITHUB_ENV

      - run: bun run build

      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          load: true
          push: false
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.CONTAINER_TAG }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.EXTRA_TAG }}

      - uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.CONTAINER_TAG }}
          format: 'table'
          exit-code: 1
          severity: 'CRITICAL,HIGH'
          ignore-unfixed: true
          hide-progress: true

      - name: Push Docker image
        if: success()
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.CONTAINER_TAG }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.EXTRA_TAG }}
